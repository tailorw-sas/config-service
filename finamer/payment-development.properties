# Server Configuration
server.port=${PAYMENT_SERVER_PORT}

# Spring Application
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=REACTIVE
server.servlet.context-path=/
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.codec.max-in-memory-size=50MB

#Keycloak Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_JWT_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWT_JWK_SET_URI}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_TOKEN_URI}

#Datasource Configuration
spring.jpa.database=default
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.show-sql=false

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=${PAYMENT_DB_HOST_RW}
spring.datasource.username=${PAYMENT_DB_USER_RW}
spring.datasource.password=${PAYMENT_DB_PASSWORD_RW}
spring.datasource.minimum-idle=2
spring.datasource.maximum-pool-size=2

spring.read-datasource.driverClassName=org.postgresql.Driver
spring.read-datasource.url=${PAYMENT_DB_HOST_R}
spring.read-datasource.username=${PAYMENT_DB_USER_R}
spring.read-datasource.password=${PAYMENT_DB_PASSWORD_R}
spring.read-datasource.minimum-idle=2
spring.read-datasource.maximum-pool-size=2

# JWT Configuration
jwt.auth.converter.resource-id=${JWT_AUTH_RESOURCE_ID}
jwt.auth.converter.principle-attribute=preferred_username

# HTTP and CORS Configuration
http.cors-enabled=true
http.cors.allowed-origins=${GATEWAY_SERVICE}
http.cors.allowed-methods=*
http.cors.allowed-headers=*
http.cors.exposed-headers=*
http.cors.allow-credentials=true
http.cors.max-age=3600

# SpringDoc Configuration
springdoc.swagger-ui.path=/swagger-ui.html

# Management Endpoints
management.endpoints.web.exposure.include=openapi,swagger-ui

#Kafka Configuration
KAFKA_BOOTSTRAP_ADDRESS=${KAFKA_BOOTSTRAP_ADDRESS}
KAFKA_GROUP_ID=${PAYMENT_KAFKA_GROUP_ID}
KAFKA_SASL_USERNAME=${KAFKA_USERNAME}
KAFKA_SASL_PASSWORD=${KAFKA_PASSWORD}

#Payment Application Configurations
payment.source.expense.code=${PAYMENT_SOURCE_EXP_CODE:EXP}
payment.source.bank.code=${PAYMENT_SOURCE_BANK_CODE:BK}
payment.status.confirm.code=${PAYMENT_STATUS_CONF_CODE:CON}
payment.source.apply.code=${PAYMENT_SOURCE_APPLY_CODE:APL}
payment.attachment.status.code=${PAYMENT_ATTACHMENT_STATUS_CODE:OTHER}
payment.resource.type.code=${PAYMENT_SOURCE_TYPE_CODE:PAY}
payment.attachment.type.code=${PAYMENT_ATTACHMENT_TYPE_CODE:PYD}
payment.default.attachment.status.code=${PAYMENT_DEFAULT_ATTACHMENT_STATUS_CODE:NON}
payment.relate.invoice.status.code=${PAYMENT_RELATED_INCOME_STATUS_CODE:SENT}
report.payment-all-support-code=${ALL_SUPPORT_CODE:PAY}

#Internal Endpoints
payment.file.service.url=${FILE_SERVICE_URL}/api/files
report.service.url=${REPORT_SERVICE}/api/reports/generate-template
report.invoice.service=${INVOICE_SERVICE}/api/manage-invoice/report

#FTP Configuration
ftp.api.url=${MAIL_API_URL}/api/ftp
upload.location=/tmp/upload

ftp.server.address=${FTP_SERVER}
ftp.server.port=${FTP_PORT}
ftp.username=${FTP_USERNAME}
ftp.password=${FTP_PASSWORD}
ftp.base.path=${FTP_BASE_PATH}

setting.service.url=${SETTINGS_SERVICE}
booking.invoice.service=${INVOICING_SERVICE}

#reportes code
report.code.payment.details=aaa
report.code.invoice.booking=inv

#JMX Exporter - Monitoring Configuration
management.endpoints.jmx.exposure.include=*
management.metrics.export.prometheus.enabled=true
