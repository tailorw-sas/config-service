# Server Configuration
server.port=${SERVER_PORT}
server.servlet.context-path=/

# Spring Application
spring.application.name=gateway
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=REACTIVE

#Keycloak Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_JWT_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWT_JWK_SET_URI}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_TOKEN_URI}

#Spring Cloud Gateway Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Request-Method Access-Control-Allow-Origin Access-Control-Request-Headers, RETAIN_UNIQUE
spring.cloud.gateway.httpclient.disable-content-security=true

# Scheduler Configuration
scheduler.config.enabled=false
scheduler.config.initialDelay=10
scheduler.config.refreshRate=8

# JWT Configuration
jwt.auth.converter.resource-id=${JWT_AUTH_RESOURCE_ID}
jwt.auth.converter.principle-attribute=preferred_username

# Eureka Client Configuration
eureka.client.register-with-eureka=false
eureka.client.service-url.defaultZone=${REGISTRY_SERVICE}/eureka
eureka.instance.prefer-ip-address=true

# SpringDoc Configuration
springdoc.swagger-ui.enabled=true

# Management Endpoints
management.endpoints.web.exposure.include=openapi,swagger-ui,gateway,refresh

# Logging Level
logging.level.org.springframework.cloud=DEBUG
logging.level.keycloak=DEBUG

#Kafka Configuration
KAFKA_BOOTSTRAP_ADDRESS=${KAFKA_BOOTSTRAP_ADDRESS}
KAFKA_GROUP_ID=${KAFKA_GROUP_ID}
KAFKA_SASL_USERNAME=${KAFKA_USERNAME}
KAFKA_SASL_PASSWORD=${KAFKA_PASSWORD}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# application.properties
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

#Internal Endpoints Configuration
report.service.url=${REPORT_SERVICE}/api/reports/generate-template

logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG

#Static service routes Configuration

#Identity:
spring.cloud.gateway.routes[0].id=identity
spring.cloud.gateway.routes[0].uri=${IDENTITY_SERVICE}
spring.cloud.gateway.routes[0].predicates[0]=Path=/identity/api/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

#Setting:
spring.cloud.gateway.routes[1].id=settings
spring.cloud.gateway.routes[1].uri=${SETTINGS_SERVICE}
spring.cloud.gateway.routes[1].predicates[0]=Path=/settings/api/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

#CloudBridges:
spring.cloud.gateway.routes[2].id=cloudbridges
spring.cloud.gateway.routes[2].uri=${CLOUDBRIDGES_SERVICE}
spring.cloud.gateway.routes[2].predicates[0]=Path=/cloudbridges/api/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

#CreditCard:
spring.cloud.gateway.routes[3].id=creditcard
spring.cloud.gateway.routes[3].uri=${CREDITCARD_SERVICE}
spring.cloud.gateway.routes[3].predicates[0]=Path=/creditcard/api/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1

#Innsist:
spring.cloud.gateway.routes[4].id=innsist
spring.cloud.gateway.routes[4].uri=${INNSIST_SERVICE}
spring.cloud.gateway.routes[4].predicates[0]=Path=/innsist/api/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1

#Invoicing:
spring.cloud.gateway.routes[5].id=invoicing
spring.cloud.gateway.routes[5].uri=${INVOICING_SERVICE}
spring.cloud.gateway.routes[5].predicates[0]=Path=/invoicing/api/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1

#Payment:
spring.cloud.gateway.routes[6].id=payment
spring.cloud.gateway.routes[6].uri=${PAYMENT_SERVICE}
spring.cloud.gateway.routes[6].predicates[0]=Path=/payment/api/**
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=1

#Report:
spring.cloud.gateway.routes[7].id=report
spring.cloud.gateway.routes[7].uri=${REPORT_SERVICE}
spring.cloud.gateway.routes[7].predicates[0]=Path=/report/api/**
spring.cloud.gateway.routes[7].filters[0]=StripPrefix=1

#Scheduler:
spring.cloud.gateway.routes[8].id=scheduler
spring.cloud.gateway.routes[8].uri=${SCHEDULER_SERVICE}
spring.cloud.gateway.routes[8].predicates[0]=Path=/scheduler/api/**
spring.cloud.gateway.routes[8].filters[0]=StripPrefix=1

#Settings:
spring.cloud.gateway.routes[9].id=settings
spring.cloud.gateway.routes[9].uri=${SETTINGS_SERVICE}
spring.cloud.gateway.routes[9].predicates[0]=Path=/settings/api/**
spring.cloud.gateway.routes[9].filters[0]=StripPrefix=1

#JMX Exporter - Monitoring
management.endpoints.jmx.exposure.include=*
management.metrics.export.prometheus.enabled=true
