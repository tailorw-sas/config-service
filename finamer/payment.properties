# Server Configuration
server.port=${PAYMENT_SERVER_PORT}

# Spring Application
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=REACTIVE
server.servlet.context-path=/
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.codec.max-in-memory-size=50MB

#Keycloak Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_JWT_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWT_JWK_SET_URI}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_TOKEN_URI}

#Datasource Configurations
spring.jpa.database=default
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=${PAYMENT_DB_HOST_RW}
spring.datasource.username=${PAYMENT_DB_USER_RW}
spring.datasource.password=${PAYMENT_DB_PASSWORD_RW}
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=20000

spring.read-datasource.driverClassName=org.postgresql.Driver
spring.read-datasource.url=${PAYMENT_DB_HOST_R}
spring.read-datasource.username=${PAYMENT_DB_USER_R}
spring.read-datasource.password=${PAYMENT_DB_PASSWORD_R}
spring.read-datasource.hikari.maximum-pool-size=10
spring.read-datasource.hikari.minimum-idle=3
spring.read-datasource.hikari.idle-timeout=30000
spring.read-datasource.hikari.connection-timeout=30000
spring.read-datasource.hikari.leak-detection-threshold=20000

# JWT Configuration
jwt.auth.converter.resource-id=${JWT_AUTH_RESOURCE_ID}
jwt.auth.converter.principle-attribute=preferred_username

#Kafka Configuration
KAFKA_BOOTSTRAP_ADDRESS=${KAFKA_BOOTSTRAP_ADDRESS}
KAFKA_GROUP_ID=${PAYMENT_KAFKA_GROUP_ID}
KAFKA_SASL_USERNAME=${KAFKA_USERNAME}
KAFKA_SASL_PASSWORD=${KAFKA_PASSWORD}

#Payment Application Configurations
payment.source.expense.code=${PAYMENT_SOURCE_EXP_CODE:EXP}
payment.source.bank.code=${PAYMENT_SOURCE_BANK_CODE:BK}
payment.status.confirm.code=${PAYMENT_STATUS_CONF_CODE:CON}
payment.source.apply.code=${PAYMENT_SOURCE_APPLY_CODE:APL}
payment.attachment.status.code=${PAYMENT_ATTACHMENT_STATUS_CODE:OTHER}
payment.resource.type.code=${PAYMENT_SOURCE_TYPE_CODE:PAY}
payment.attachment.type.code=${PAYMENT_ATTACHMENT_TYPE_CODE:PYD}
payment.default.attachment.status.code=${PAYMENT_DEFAULT_ATTACHMENT_STATUS_CODE:NON}
payment.relate.invoice.status.code=${PAYMENT_RELATED_INCOME_STATUS_CODE:SENT}
report.payment-all-support-code=${ALL_SUPPORT_CODE:PAY}

#Internal Endpoints
payment.file.service.url=${PAYMENT_FILE_SERVICE_URL}
report.service.url=${REPORT_SERVICE}
report.invoice.service=${REPORT_SERVICE}

#Internal Path Endpoints
antitoincone.invoice.service=/api/income/anti-to-income

#FTP Configuration
ftp.api.url=${MAIL_API_URL}
upload.location=/tmp/upload

ftp.server.address=${FTP_SERVER}
ftp.server.port=${FTP_PORT}
ftp.username=${FTP_USERNAME}
ftp.password=${FTP_PASSWORD}
ftp.base.path=${FTP_BASE_PATH}

setting.service.url=${SETTINGS_SERVICE}
booking.invoice.service=${INVOICING_SERVICE}

#reportes code
report.code.payment.details=aaa
report.code.invoice.booking=inv

#JMX Exporter - Monitoring Configuration
management.security.enable=false
management.endpoint.metrics.enabled=true
management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=health,info,metrics,prometheus,security
management.endpoints.enabled-by-default=true

management.metrics.enable.http=true
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.web.server.auto-time-requests=true

#MinIO
minio.endpoint.url=${MINIO_URL}
minio.accessKey=${MINIO_ACCESS_KEY}
minio.secretKey=${MINIO_ACCESS_SECRET}
minio.bucketName=${PAYMENT_MINIO_BUCKET_NAME}
minio.bucket.private=false

# Logging Level
logging.level.org.springframework.cloud=DEBUG
logging.level.keycloak=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=TRACE

#CORS Configuration
cors.cors-enabled=true
cors.allowed-origins=${GATEWAY_SERVICE}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH
cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin,X-Service-Token,X-User-Context,X-Internal-JWT
cors.allow-credentials=true
cors.max-age=3600

# Rutas p√∫blicas para el Gateway (AGREGAR)


# Springdoc Swagger UI Configuration
springdoc.swagger-ui.path=/swagger-ui.html

# Management Endpoints Configuration
management.endpoints.web.exposure.include=openapi,swagger-ui

# Security Configuration 2025-10-03
kynsoft.security.enabled=true
kynsoft.security.microservice.enabled=false
kynsoft.security.webclient.enabled=true
kynsoft.security.debug-enabled=true
kynsoft.security.internal-service-token=${INTERNAL_SERVICE_TOKEN}
kynsoft.security.jwt.secret=${JWT_SECRET}
kynsoft.security.jwt.internal.enabled=true
kynsoft.security.jwt.internal.expiration=86400000
kynsoft.security.jwt.internal.algorithm=HS256
kynsoft.security.jwt.internal.issuer=kynsoft-internal
kynsoft.security.jwt.internal.audience=internal-microservices
kynsoft.environment=${KYNSOFT_ENVIRONMENT:development}

kynsoft.security.microservice.security.protected-paths=/api/**
kynsoft.security.microservice.security.public-paths=/actuator/**,/v3/api-docs/**,/swagger-ui/**,/webjars/**
kynsoft.security.microservice.security.strict-validation=true
kynsoft.security.microservice.security.audit-enabled=true

kynsoft.security.webclient.retry.max-attempts=3
kynsoft.security.webclient.retry.backoff-delay-ms=1000
kynsoft.security.webclient.retry.enabled=true
kynsoft.security.webclient.timeout.connection-timeout-ms=5000
kynsoft.security.webclient.timeout.response-timeout-ms=30000
kynsoft.security.webclient.timeout.read-timeout-ms=30000
