# Server Configuration
server.port=8097
server.servlet.context-path=/
spring.codec.max-in-memory-size=50MB
# Spring Application
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=REACTIVE
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://authdev.tailorw.net/realms/Erp
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://authdev.tailorw.net/realms/Erp/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=https://authdev.tailorw.net/realms/Erp/protocol/openid-connect/token

#datasource
spring.jpa.database=default
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#Esta es la propiedad encargada de generar el esquema de BD.
spring.jpa.generate-ddl=true
spring.jpa.show-sql=false

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://172.20.41.100:5432/finamer-payments
spring.datasource.username=finamer_rw
spring.datasource.password=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
spring.datasource.minimum-idle=2
spring.datasource.maximum-pool-size=2

spring.read-datasource.driverClassName=org.postgresql.Driver
spring.read-datasource.url=jdbc:postgresql://172.20.41.100:5432/finamer-payments
spring.read-datasource.username=finamer_ro
spring.read-datasource.password=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
spring.read-datasource.minimum-idle=2
spring.read-datasource.maximum-pool-size=2

# JWT Configuration
jwt.auth.converter.resource-id=finamer
jwt.auth.converter.principle-attribute=preferred_username

# HTTP and CORS Configuration
http.cors-enabled=true
http.cors.allowed-origins=http://localhost:8080,http://localhost:5173
http.cors.allowed-methods=*
http.cors.allowed-headers=*
http.cors.exposed-headers=*
http.cors.allow-credentials=true
http.cors.max-age=3600

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.preferIpAddress=true
spring.cloud.gateway.discovery.locator.enabled=true
# SpringDoc Configuration
springdoc.swagger-ui.path=/swagger-ui.html

# Management Endpoints
management.endpoints.web.exposure.include=openapi,swagger-ui

#Payment
payment.service.host=payment
payment.service.client-id=669ed63c-5af0-4afc-a45c-9f1369f58cfb
payment.service.expiration=15
payment.service.port=8080


#KAFKA
KAFKA_BOOTSTRAP_ADDRESS=localhost:9092
KAFKA_GROUP_ID:group-id

# Configuración específica para el perfil dev
KAFKA_SASL_USERNAME=user1
KAFKA_SASL_PASSWORD=AkC7B1ooWO

payment.source.expense.code=${PAYMENT_SOURCE_EXP_CODE:EXP}
payment.source.bank.code=${PAYMENT_SOURCE_BANK_CODE:BK}
payment.status.confirm.code=${PAYMENT_STATUS_CONF_CODE:CON}
payment.source.apply.code=${PAYMENT_SOURCE_APPLY_CODE:APL}
payment.attachment.status.code=${PAYMENT_ATTACHEMENT_STATUS_CODE:OTHER}
payment.resource.type.code=${PAYMENT_SOURCE_APPLY_CODE:PAY}
payment.attachment.type.code=${PAYMENT_ATTACHEMENT_TYPE_CODE:PYD}
payment.default.attachment.status.code=${PAYMENT_ATTACHMENT_STATUS_CODE:NON}
payment.relate.invoice.status.code=${PAYMENT_RELATED_INCOME_STATUS_CODE:SENT}
payment.file.service.url=${PAYMENT_FILE_SERVICE_URL:http://localhost:9909/api/files}

spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

report.service.url=http://localhost:9708/api/reports/generate-template
report.payment-all-support-code=${ALL_SUPPORT_CODE:PAY}
report.invoice.service=${INVOICE_SERVICE:http://localhost:9909/api/manage-invoice/report}
upload.location=/tmp/upload

#reportes code
report.code.payment.details=aaa

ftp.server.address=localhost
ftp.server.port=9091
ftp.username=yannier
ftp.password=yannier
ftp.base.path=http


setting.service.url=http://localhost:9094


#booking.invoice.service=${BOOKING_INVOICE_SERVICE:http://invoicing.finamer.svc.cluster.local:9909}
booking.invoice.service=${BOOKING_INVOICE_SERVICE:http://localhost:9199}


