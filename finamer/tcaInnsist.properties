# Server Configuration
server.port=${TCA_INNSIST_SERVER_PORT}

#Datasource Configuration
spring.jpa.database=default
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=true
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=${TCA_INNSIST_DB_HOST_RW}
spring.datasource.username=${TCA_INNSIST_DB_USER_RW}
spring.datasource.password=${TCA_INNSIST_DB_PASSWORD_RW}
spring.datasource.minimum-idle=2
spring.datasource.maximum-pool-size=2

spring.read-datasource.driverClassName=org.postgresql.Driver
spring.read-datasource.url=${TCA_INNSIST_DB_HOST_R}
spring.read-datasource.username=${TCA_INNSIST_DB_USER_R}
spring.read-datasource.password=${TCA_INNSIST_DB_PASSWORD_R}
spring.read-datasource.minimum-idle=2
spring.read-datasource.maximum-pool-size=2

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

#Redis Configuration
REDIS_ADDRESS=${REDIS_ADDRESS}
REDIS_PORT=${REDIS_PORT}

#Encryption Security
encryption.secretKey=${ENCRYPTION_SECRET_KEY}
encryption.algoritm=${ENCRYPTION_ALGORITM}
encryption.mode=${ENCRYPTION_MODE}
encryption.padding=${ENCRYPTION_PADDING}

#Kafka Configuration
KAFKA_BOOTSTRAP_ADDRESS=${KAFKA_BOOTSTRAP_ADDRESS}
KAFKA_GROUP_ID=${TCA_INNSIST_KAFKA_GROUP_ID}
KAFKA_MAX_REQUEST_VALUE:104857600
KAFKA_SASL_USERNAME=${KAFKA_USERNAME}
KAFKA_SASL_PASSWORD=${KAFKA_PASSWORD}

#Spring Batch
spring.batch.initialize-schema=never
spring.datasource.schema=classpath:schema.sql
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#JMX Exporter - Monitoring Configuration
management.security.enable=false
management.endpoint.metrics.enabled=true
management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoints.enabled-by-default=true

management.metrics.enable.http=true
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.web.server.auto-time-requests=true

#MinIO
minio.endpoint.url=${MINIO_URL}
minio.accessKey=${MINIO_ACCESS_KEY}
minio.secretKey=${MINIO_ACCESS_SECRET}
minio.bucketName=${TCA_INNSIST_MINIO_BUCKET_NAME}
minio.bucket.private=false

# Logging Level
logging.level.org.springframework.cloud=DEBUG
logging.level.keycloak=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=TRACE
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#CORS Configuration
cors.cors-enabled=true
cors.allowed-origins=${GATEWAY_SERVICE}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH
cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin
cors.allow-credentials=true
cors.max-age=3600

# Rutas p√∫blicas para el Gateway (AGREGAR)
kynsoft.security.enabled=true
kynsoft.security.debug-enabled=true
security.auth-whitelist=/actuator/**,/v3/api-docs/**,/swagger-ui/**,/swagger-ui.html
security.additional-public-paths=/gateway/health,/gateway/info,/webjars/**

# Springdoc Swagger UI Configuration
springdoc.swagger-ui.path=/swagger-ui.html

# Management Endpoints Configuration
management.endpoints.web.exposure.include=openapi,swagger-ui


