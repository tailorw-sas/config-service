server.port=8097
server.servlet.context-path=/

java.awt.headless=true

# Spring Application
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=reactive
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://authdev.tailorw.net/realms/Erp
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://authdev.tailorw.net/realms/Erp/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=https://authdev.tailorw.net/realms/Erp/protocol/openid-connect/token

# Para usar SMTP
#spring.profiles.active=smtp
#
## Para usar Mailjet
#spring.profiles.active=mailjet

# Claves API de Mailjet
mailjet.apiKey=${MAILJET_KEY}
mailjet.apiSecret=${MAILJET_SECRET}

# Dirección de correo electrónico y nombre desde donde se enviarán los correos
mailjet.fromEmail=it@ublik.net
mailjet.fromName=KYNSOFT


eureka.instance.hostname=registry
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.preferIpAddress=true
spring.cloud.gateway.discovery.locator.enabled=true

# JWT Configuration
jwt.auth.converter.resource-id=medinec
jwt.auth.converter.principle-attribute=preferred_username

# HTTP and CORS Configuration
http.cors-enabled=true
http.cors.allowed-origins=http://localhost:8080,http://localhost:5173
http.cors.allowed-methods=*
http.cors.allowed-headers=*
http.cors.exposed-headers=*
http.cors.allow-credentials=true
http.cors.max-age=3600

# Springdoc Swagger UI Configuration
springdoc.swagger-ui.path=/swagger-ui.html

# Management Endpoints Configuration
management.endpoints.web.exposure.include=openapi,swagger-ui

#S3 File
#aws.accessKey=${AWS_ACCESS_KEY}
#aws.secretKey=${AWS_ACCESS_SECRET}
#aws.bucketUrl=https://dany0919-bucket.s3.us-east-1.amazonaws.com/files/
#aws.bucketName=dany0919-bucket
#aws.region=us-east-1
#aws.cloudfront.domain=https://dany0919-bucket.s3.us-east-1.amazonaws.com/files/

#S3 File
aws.accessKey=d4c8c78b86efbcfef231e082dc0698e4
aws.secretKey=7bc4e4fecc3705b8e5db1a7ae6259616e8bad30cd4c777a4e4b6fca6d9e84371
aws.bucketUrl=https://2e10c0c0af5d62dda38531c1d2f25892.r2.cloudflarestorage.com
aws.bucketName=bucketdev
aws.region=enam
aws.cloudfront.domain=https://dsoftw.com/
spring.datasource.initialization-mode=always

#datasource
spring.jpa.database=default
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/finamer-cloudbridges
spring.datasource.username=finamer_rw
spring.datasource.password=5G30y1cXz89cA1yc0gCE3OhhBLQkvUTV2icqz5qNRQGq4cbM5F0bc
spring.datasource.minimum-idle=2
spring.datasource.maximum-pool-size=2

spring.read-datasource.driverClassName=org.postgresql.Driver
spring.read-datasource.url=jdbc:postgresql://localhost:5432/finamer-cloudbridges
spring.read-datasource.username=finamer_ro
spring.read-datasource.password=DCMhpzOICbuUxiUSZ044mhWSHU1R2U53IDwOyJLRuwU1r9J74lITp
spring.read-datasource.minimum-idle=2
spring.read-datasource.maximum-pool-size=2

#Payment
payment.service.host=payment
payment.service.client-id=669ed63c-5af0-4afc-a45c-9f1369f58cfb
payment.service.expiration=15
payment.service.port=8080

#KAFKA
KAFKA_BOOTSTRAP_ADDRESS=localhost:9092
KAFKA_GROUP_ID=CLOUDBRIDGES

# Configuracion especifica para el perfil dev
#KAFKA_SASL_USERNAME=user1
#KAFKA_SASL_PASSWORD=AkC7B1ooWO

report.service.url=http://localhost:9908/api/reports/generate-template

ftp.port=21
ftp.bufferSize=10485760
ftp.connectTimeout=120000
ftp.soTimeout=120000
ftp.server.address=172.20.41.96
ftp.server.port=21
ftp.username=usrftp01
ftp.password=usuarioftp01*
ftp.base.path=payment

#MinIO
minio.endpoint.url=https://miniodev-api.tailorw.net/
minio.accessKey=RIfhLlj8UiJM7zBk4rzB
minio.secretKey=ISEyv5ZymrpE8AXnzcFxnlYxQdNimuzB8RJzd1pj
minio.bucketName=finamer-erp-dev
minio.bucket.private=false

mail.template.welcome=6645476
mail.template.password.reset=6645491
mail.template.opt=5964805

#JMX Exporter - Monitoring
management.endpoints.jmx.exposure.include=*
management.metrics.export.prometheus.enabled=true
