# Server Configuration
server.port=9904
server.servlet.context-path=/
spring.codec.max-in-memory-size=2MB
# Spring Application
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=REACTIVE
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://auth.finamerhub.com/realms/finamerhub
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://auth.finamerhub.com/realms/finamerhub/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=https://auth.finamerhub.com/realms/finamerhub/protocol/openid-connect/token

#datasource
spring.jpa.database=default
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#Esta es la propiedad encargada de generar el esquema de BD.
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=${DB_HOST_RW}
spring.datasource.username=${DB_USER_RW}
spring.datasource.password=${DB_PASSWORD_RW}
spring.datasource.minimum-idle=2
spring.datasource.maximum-pool-size=2

# JWT Configuration
jwt.auth.converter.resource-id=finamerhub
jwt.auth.converter.principle-attribute=preferred_username

# HTTP and CORS Configuration
http.cors-enabled=true
http.cors.allowed-origins=http://localhost:8080
http.cors.allowed-methods=*
http.cors.allowed-headers=*
http.cors.exposed-headers=*
http.cors.allow-credentials=true
http.cors.max-age=3600

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://registry-service:8761/eureka
eureka.instance.preferIpAddress=true
# SpringDoc Configuration
springdoc.swagger-ui.path=/swagger-ui.html

# Management Endpoints
management.endpoints.web.exposure.include=openapi,swagger-ui


#KAFKA
KAFKA_BOOTSTRAP_ADDRESS=${KAFKA_BOOSTRAP_SERVER}
KAFKA_GROUP_ID=${KAFKA_GROUP_ID}
# Configuracion especifica para autenticacion de kafka
KAFKA_SASL_USERNAME=user1
KAFKA_SASL_PASSWORD=NzvMjXtsqq

spring.data.elasticsearch.repositories.enabled=true
elasticsearch.url=${ELASTIC_SEARCH_URL}
elasticsearch.username=${ELASTIC_SEARCH_USERNAME}
elasticsearch.password=${ELASTIC_SEARCH_PASSWORD}

#JMX Exporter - Monitoring
management.endpoints.jmx.exposure.include=*
management.metrics.export.prometheus.enabled=true
