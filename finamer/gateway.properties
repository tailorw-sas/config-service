# Server Configuration
server.port=${GATEWAY_SERVER_PORT}
server.servlet.context-path=/

# Spring Application
spring.application.name=gateway
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=REACTIVE

#Keycloak Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_JWT_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWT_JWK_SET_URI}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_TOKEN_URI}

# JWT Configuration
jwt.auth.converter.resource-id=${JWT_AUTH_RESOURCE_ID}
jwt.auth.converter.principle-attribute=preferred_username

# CORS configuration (m√°s permisivo para gateway)
http.cors-enabled=true
http.allowed-origins=${GATEWAY_ALLOWED_ORIGINS:*}
http.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
http.allowed-headers=*

# Rutas p√∫blicas para el Gateway (AGREGAR)
kynsoft.security.enabled=true
kynsoft.security.debug-enabled=true
security.auth-whitelist=/actuator/**,/v3/api-docs/**,/swagger-ui/**,/swagger-ui.html,/docs/**
security.additional-public-paths=/gateway/health,/gateway/info,/webjars/**

#Spring Cloud Gateway Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Request-Method Access-Control-Allow-Origin Access-Control-Request-Headers, RETAIN_UNIQUE
spring.cloud.gateway.httpclient.disable-content-security=true

# Scheduler Configuration
scheduler.config.enabled=false
scheduler.config.initialDelay=10
scheduler.config.refreshRate=8

# Enable Swagger UI
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

# API Docs Configuration
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs

# Configuraci√≥n del Gateway para Swagger (ACTUALIZADA)
springdoc.swagger-ui.urls[0].name=üè¢ Gateway API
springdoc.swagger-ui.urls[0].url=/v3/api-docs

# ‚úÖ USAR RUTAS PROXY EN LUGAR DE URLs DIRECTAS
springdoc.swagger-ui.urls[1].name=üåâ Cloud Bridges
springdoc.swagger-ui.urls[1].url=/docs/cloudbridges

springdoc.swagger-ui.urls[2].name=üí≥ Credit Card Service
springdoc.swagger-ui.urls[2].url=/docs/creditcard

springdoc.swagger-ui.urls[3].name=üîê Identity Service
springdoc.swagger-ui.urls[3].url=/docs/identity

springdoc.swagger-ui.urls[4].name=üìà Innsist Service
springdoc.swagger-ui.urls[4].url=/docs/innsist

springdoc.swagger-ui.urls[5].name=üßæ Invoice Service
springdoc.swagger-ui.urls[5].url=/docs/invoicing

springdoc.swagger-ui.urls[6].name=üè¶ Payment Service
springdoc.swagger-ui.urls[6].url=/docs/payment

springdoc.swagger-ui.urls[7].name=üìä Report Service
springdoc.swagger-ui.urls[7].url=/docs/report

springdoc.swagger-ui.urls[8].name=‚è∞ Scheduler Service
springdoc.swagger-ui.urls[8].url=/docs/scheduler

springdoc.swagger-ui.urls[9].name=‚öôÔ∏è Settings Service
springdoc.swagger-ui.urls[9].url=/docs/settings

# Proxy routes para documentaci√≥n OpenAPI (evita CORS)
# Docs Identity
spring.cloud.gateway.routes[10].id=docs-identity
spring.cloud.gateway.routes[10].uri=${IDENTITY_SERVICE}
spring.cloud.gateway.routes[10].predicates[0]=Path=/docs/identity
spring.cloud.gateway.routes[10].filters[0]=RewritePath=/docs/identity,/v3/api-docs
spring.cloud.gateway.routes[10].filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin,RETAIN_UNIQUE

# Docs Settings
spring.cloud.gateway.routes[11].id=docs-settings
spring.cloud.gateway.routes[11].uri=${SETTINGS_SERVICE}
spring.cloud.gateway.routes[11].predicates[0]=Path=/docs/settings
spring.cloud.gateway.routes[11].filters[0]=RewritePath=/docs/settings,/v3/api-docs
spring.cloud.gateway.routes[11].filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin,RETAIN_UNIQUE

# Docs Cloud Bridges
spring.cloud.gateway.routes[12].id=docs-cloudbridges
spring.cloud.gateway.routes[12].uri=${CLOUD_BRIDGES_SERVICE}
spring.cloud.gateway.routes[12].predicates[0]=Path=/docs/cloudbridges
spring.cloud.gateway.routes[12].filters[0]=RewritePath=/docs/cloudbridges,/v3/api-docs
spring.cloud.gateway.routes[12].filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin,RETAIN_UNIQUE

# Docs Credit Card
spring.cloud.gateway.routes[13].id=docs-creditcard
spring.cloud.gateway.routes[13].uri=${CREDIT_CARD_SERVICE}
spring.cloud.gateway.routes[13].predicates[0]=Path=/docs/creditcard
spring.cloud.gateway.routes[13].filters[0]=RewritePath=/docs/creditcard,/v3/api-docs
spring.cloud.gateway.routes[13].filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin,RETAIN_UNIQUE

# Docs Innsist
spring.cloud.gateway.routes[14].id=docs-innsist
spring.cloud.gateway.routes[14].uri=${INNSIST_SERVICE}
spring.cloud.gateway.routes[14].predicates[0]=Path=/docs/innsist
spring.cloud.gateway.routes[14].filters[0]=RewritePath=/docs/innsist,/v3/api-docs
spring.cloud.gateway.routes[14].filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin,RETAIN_UNIQUE

# Docs Invoicing
spring.cloud.gateway.routes[15].id=docs-invoicing
spring.cloud.gateway.routes[15].uri=${INVOICING_SERVICE}
spring.cloud.gateway.routes[15].predicates[0]=Path=/docs/invoicing
spring.cloud.gateway.routes[15].filters[0]=RewritePath=/docs/invoicing,/v3/api-docs
spring.cloud.gateway.routes[15].filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin,RETAIN_UNIQUE

# Docs Payment
spring.cloud.gateway.routes[16].id=docs-payment
spring.cloud.gateway.routes[16].uri=${PAYMENT_SERVICE}
spring.cloud.gateway.routes[16].predicates[0]=Path=/docs/payment
spring.cloud.gateway.routes[16].filters[0]=RewritePath=/docs/payment,/v3/api-docs
spring.cloud.gateway.routes[16].filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin,RETAIN_UNIQUE

# Docs Report
spring.cloud.gateway.routes[17].id=docs-report
spring.cloud.gateway.routes[17].uri=${REPORT_SERVICE}
spring.cloud.gateway.routes[17].predicates[0]=Path=/docs/report
spring.cloud.gateway.routes[17].filters[0]=RewritePath=/docs/report,/v3/api-docs
spring.cloud.gateway.routes[17].filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin,RETAIN_UNIQUE

# Docs Scheduler
spring.cloud.gateway.routes[18].id=docs-scheduler
spring.cloud.gateway.routes[18].uri=${SCHEDULER_SERVICE}
spring.cloud.gateway.routes[18].predicates[0]=Path=/docs/scheduler
spring.cloud.gateway.routes[18].filters[0]=RewritePath=/docs/scheduler,/v3/api-docs
spring.cloud.gateway.routes[18].filters[1]=DedupeResponseHeader=Access-Control-Allow-Origin,RETAIN_UNIQUE


# Configuraci√≥n de seguridad para Swagger
springdoc.swagger-ui.oauth2-redirect-url=/swagger-ui/oauth2-redirect.html
springdoc.swagger-ui.supported-submit-methods=get,post,put,delete,patch


# Logging Level
logging.level.org.springframework.cloud=DEBUG
logging.level.keycloak=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=TRACE

#Kafka Configuration
KAFKA_BOOTSTRAP_ADDRESS=${KAFKA_BOOTSTRAP_ADDRESS}
KAFKA_GROUP_ID=${GATEWAY_KAFKA_GROUP_ID}
KAFKA_SASL_USERNAME=${KAFKA_USERNAME}
KAFKA_SASL_PASSWORD=${KAFKA_PASSWORD}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=${GATEWAY_KAFKA_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# application.properties
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

#Internal Endpoints Configuration
report.service.url=${REPORT_SERVICE}/api/reports/generate-template

#Static service routes Configuration
#Identity:
spring.cloud.gateway.routes[0].id=identity
spring.cloud.gateway.routes[0].uri=${IDENTITY_SERVICE}
spring.cloud.gateway.routes[0].predicates[0]=Path=/identity/api/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

#Setting:
spring.cloud.gateway.routes[1].id=settings
spring.cloud.gateway.routes[1].uri=${SETTINGS_SERVICE}
spring.cloud.gateway.routes[1].predicates[0]=Path=/settings/api/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

#CloudBridges:
spring.cloud.gateway.routes[2].id=cloudbridges
spring.cloud.gateway.routes[2].uri=${CLOUD_BRIDGES_SERVICE}
spring.cloud.gateway.routes[2].predicates[0]=Path=/cloudbridges/api/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

#CreditCard:
spring.cloud.gateway.routes[3].id=creditcard
spring.cloud.gateway.routes[3].uri=${CREDIT_CARD_SERVICE}
spring.cloud.gateway.routes[3].predicates[0]=Path=/creditcard/api/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1

#Innsist:
spring.cloud.gateway.routes[4].id=innsist
spring.cloud.gateway.routes[4].uri=${INNSIST_SERVICE}
spring.cloud.gateway.routes[4].predicates[0]=Path=/innsist/api/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1

#Invoicing:
spring.cloud.gateway.routes[5].id=invoicing
spring.cloud.gateway.routes[5].uri=${INVOICING_SERVICE}
spring.cloud.gateway.routes[5].predicates[0]=Path=/invoicing/api/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1

#Payment:
spring.cloud.gateway.routes[6].id=payment
spring.cloud.gateway.routes[6].uri=${PAYMENT_SERVICE}
spring.cloud.gateway.routes[6].predicates[0]=Path=/payment/api/**
spring.cloud.gateway.routes[6].filters[0]=StripPrefix=1

#Report:
spring.cloud.gateway.routes[7].id=report
spring.cloud.gateway.routes[7].uri=${REPORT_SERVICE}
spring.cloud.gateway.routes[7].predicates[0]=Path=/report/api/**
spring.cloud.gateway.routes[7].filters[0]=StripPrefix=1

#Scheduler:
spring.cloud.gateway.routes[8].id=scheduler
spring.cloud.gateway.routes[8].uri=${SCHEDULER_SERVICE}
spring.cloud.gateway.routes[8].predicates[0]=Path=/scheduler/api/**
spring.cloud.gateway.routes[8].filters[0]=StripPrefix=1

#JMX Exporter - Monitoring Configuration
management.security.enable=false
management.endpoint.metrics.enabled=true
management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=health,info,metrics,prometheus,openapi,swagger-ui,gateway,refresh
# Management Endpoints
#management.endpoints.web.exposure.include=openapi,swagger-ui,gateway,refresh

management.endpoints.enabled-by-default=true

management.metrics.enable.http=true
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.web.server.auto-time-requests=true

#MinIO
minio.endpoint.url=${MINIO_URL}
minio.accessKey=${MINIO_ACCESS_KEY}
minio.secretKey=${MINIO_ACCESS_SECRET}
minio.bucketName=${MINIO_BUCKET_NAME}
minio.bucket.private=false
