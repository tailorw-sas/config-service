# Server Configuration
server.port=8080
server.servlet.context-path=/

# Spring Application
spring.application.name=gateway
spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=REACTIVE
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://auth.finamerhub.com/realms/finamerhub
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://auth.finamerhub.com/realms/finamerhub/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=https://auth.finamerhub.com/realms/finamerhub/protocol/openid-connect/token
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Request-Method Access-Control-Allow-Origin Access-Control-Request-Headers, RETAIN_UNIQUE
spring.cloud.gateway.httpclient.disable-content-security=true

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID:group_id}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Scheduler Configuration
scheduler.config.enabled=false
scheduler.config.initialDelay=10
scheduler.config.refreshRate=8

# JWT Configuration
jwt.auth.converter.resource-id=medinec
jwt.auth.converter.principle-attribute=preferred_username

# Google Configuration
google.client-id=945296493767-ic6omj9ke4o76n11k71eq0trap4lu6r0.apps.googleusercontent.com

# Eureka Client Configuration
eureka.client.register-with-eureka=false
eureka.client.service-url.defaultZone=http://registry-service:8761/eureka
eureka.instance.prefer-ip-address=false

# SpringDoc Configuration
springdoc.swagger-ui.enabled=true

# Management Endpoints
management.endpoints.web.exposure.include=openapi,swagger-ui,gateway,refresh

# HTTP and CORS Configuration
http.cors-enabled=true
http.cors.allowed-origins=*
http.cors.allowed-methods=*
http.cors.allowed-headers=*
http.cors.exposed-headers=*
http.cors.allow-credentials=true
http.cors.max-age=1800

# Logging Level
logging.level.org.springframework.cloud=DEBUG
logging.level.keycloak=DEBUG

#Payment
payment.service.host=payment
payment.service.client-id=7645608b-a1d5-432a-a0ff-9f0a19ae7f7c
payment.service.expiration=15
payment.service.port=8080

#KAFKA
KAFKA_BOOTSTRAP_ADDRESS=${KAFKA_BOOTSTRAP_ADDRESS}
KAFKA_GROUP_ID=${KAFKA_GROUP_ID}
KAFKA_MAX_REQUEST_VALUE:104857600

# application.properties
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

report.service.url=http://report.erp.svc.cluster.local:9908/api/reports/generate-template
